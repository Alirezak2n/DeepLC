name: Publish to PyPI and GitHub release

on:
  push:
    tags:
    - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Copy models to GUI directory
      run: |
        cp -r deeplc/mods deeplc_gui

    - name: Zip GUI directory
      uses: thedoctor0/zip-release@master
      with:
        filename: 'deeplc_gui.zip'
        exclusions: '/*src/*'
        path: 'deeplc_gui/*'

    - name: Create GitHub Release
      uses: docker://antonyurchenko/git-release:v3.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DRAFT_RELEASE: "false"
        PRE_RELEASE: "false"
        CHANGELOG_FILE: "CHANGELOG.md"
        ALLOW_TAG_PREFIX: "true"
      with:
        args: |
          deeplc_gui.zip

    - name: Build and publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  build-streamlit-image:
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - uses: actions/checkout@v2
    - id: latest_release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: compomics
        repo: DeepLC
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push to ghcr.io
      uses: docker/build-push-action@v2
      with:
        context: streamlit
        push: true
        tags:
          - ghcr.io/compomics/deeplc-streamlit:${{ steps.latest_release.outputs.release }}
          - ghcr.io/compomics/deeplc-streamlit:latest
